import {Component} from '@angular/core';

import {MenuController, Platform} from '@ionic/angular';
import {SplashScreen} from '@ionic-native/splash-screen/ngx';
import {StatusBar} from '@ionic-native/status-bar/ngx';
import {Router} from '@angular/router';
import {Storage} from '@ionic/storage';
import {HttpServiceService} from './http-service.service';

@Component({
    selector: 'app-root',
    templateUrl: 'app.component.html'
})
export class AppComponent {
    public appPages = [
        {
            title: 'Home',
            url: '/home',
            icon: 'home'
        }, {
            title: 'Kalender',
            url: '/calendar',
            icon: 'calendar'
        }, {
            title: 'Chat',
            url: '/chat',
            icon: 'chatbubbles'
        }
    ];
    public optionPages = [
        {
            title: 'Einstellungen',
            url: '/settings',
            icon: 'settings'
        }, {
            title: 'Hilfe und Feedback',
            url: '/help',
            icon: 'help-circle-outline'
        }
    ];
    public leaderPages = [
        {
            title: 'Planung',
            url: '/home',
            icon: 'bookmarks'
        }, {
            title: 'Gruppenliste',
            url: '/home',
            icon: 'list'
        }, {
            title: 'Nachrichten',
            url: '/mail',
            icon: 'mail'
        }
    ];
    public adminPages = [
        {
            title: 'Nutzerwelvwaltung',
            url: '/admin-account',
            icon: 'contacts'
        },
    ];
    public accountPages = [
        {
            title: 'Konto vewalten',
            url: '/home',
            icon: 'person'
        }, {
            title: 'Abmelden',
            url: '/home',
            icon: 'log-out'
        }
    ];

    // true, when the accountPage is dropped right now
    public isDropped = false;
    public userName: string;
    public userRole: string;

    private mobile = false;

    constructor(
        private platform: Platform,
        private splashScreen: SplashScreen,
        private statusBar: StatusBar,
        private menuCtrl: MenuController,
        private router: Router,
        private storage: Storage,
        private plt: Platform,
        private http: HttpServiceService
    ) {
        this.initializeApp();
    }

    /**
     * method generated by ionic
     */
    initializeApp() {
        this.platform.ready().then(async () => {
            this.statusBar.styleDefault();

            // console.log('HEIGHT: ' + this.plt.height());
            this.storage.set('height', this.plt.height());

            // console.log('WIDTH: ' + this.plt.width());
            this.storage.set('width', this.plt.width());

            // console.log('PORTRAIT: ' + this.plt.isPortrait());

            if (this.plt.is('android')) {
                // console.log('DEVICE: android');
            } else if (this.plt.is('ios')) {
                // console.log('DEVICE: ios');
            }
            if (this.plt.is('desktop')) {
                // console.log('DEVICE: desktop');
                this.mobile = false;
            }
            if (this.plt.is('cordova')) {
                // console.log('DEVICE: cordova');
                this.mobile = true;
            }

            this.storage.set('isMobile', this.mobile);

            if (await this.isLoggedIn()) {// already logged in
                // dont need tou route to home, will automatically go home
            } else {
                this.goToLogin();
            }

            this.setUserData();

        });
    }

    private async setUserData() {
        const name1 = await this.storage.get('first_name');
        const name2 = await this.storage.get('last_name');
        this.userName = name1 + ' ' + name2;
        this.userRole = await this.storage.get('role');
        this.splashScreen.hide();
    }

    /**
     * @returns url from active router
     */
    getActiveUrl() {
        return this.router.url;
    }

    /**
     * toggle the account menu divs
     */
    public toggleAccountMenu() {
        document.getElementById('menu_default').classList.toggle('displayNone');
        document.getElementById('menu_account').classList.toggle('displayNone');
        this.isDropped = !this.isDropped;
    }

    /**
     * close the menu and toggle the account menu when dropped
     */
    public closeMenu() {
        this.menuCtrl.close();
        if (this.isDropped) {
            this.toggleAccountMenu();
        }
    }

    /**
     * use own close Method
     */
    public ionCloseMenu() {
        this.closeMenu();
    }

    /**
     * check if the user is already logged in or has a username and password saved
     * @return Promise<boolean>
     */
    private isLoggedIn(): Promise<boolean> {
        return new Promise(async resolve => {
            this.http.getAndSetUserData().then(async isTokenValid => {
                const pw: string = await this.storage.get('pw');
                const email: string = await this.storage.get('email');
                if (isTokenValid) {
                    console.log('token is valid');
                    resolve(true);
                } else if (!!(pw && email)) {
                    console.log('is RememberPw ');
                    console.log('E-Mail: ' + email);
                    console.log('Password: ' + pw);
                    this.http.auth(email, pw, true).then((isAuthTrue: boolean) => resolve(isAuthTrue));
                } else {
                    console.log('is not RememberPw ');
                    resolve(false);
                }
            });
        });
    }

    /**
     * navigate to LoginPage
     */
    private goToLogin() {
        this.router.navigate(['/registration']);
    }
}
